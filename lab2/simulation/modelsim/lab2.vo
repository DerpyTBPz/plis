// Copyright (C) 1991-2009 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 9.0 Build 132 02/25/2009 SJ Full Version"

// DATE "10/23/2024 12:40:34"

// 
// Device: Altera EP1K30TC144-3 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lab2_delay (
	clk,
	rst,
	out,
	temp);
input 	clk;
input 	rst;
output 	[7:0] out;
output 	[7:0] temp;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("lab2_v.sdo");
// synopsys translate_on

wire \Equal0~11_combout ;
wire \Equal0~21_combout ;
wire \Equal0~34 ;
wire \Equal0~18_combout ;
wire \Equal0~36 ;
wire \Equal0~22_combout ;
wire \tick~5_combout ;
wire \counter[27]~63_combout ;
wire \rst~dataout ;
wire \clk~dataout ;
wire \Add0|adder|result_node|cs_buffer[0]~COUT ;
wire \Add0|adder|result_node|cs_buffer[1]~COUT ;
wire \Add0|adder|result_node|cs_buffer[2]~COUT ;
wire \Add0|adder|result_node|cs_buffer[3]~COUT ;
wire \Add0|adder|result_node|cs_buffer[4]~COUT ;
wire \Add0|adder|result_node|cs_buffer[5]~COUT ;
wire \Add0|adder|result_node|cs_buffer[6]~COUT ;
wire \Add0|adder|result_node|cs_buffer[7]~COUT ;
wire \Add0|adder|result_node|cs_buffer[8]~COUT ;
wire \Add0|adder|result_node|cs_buffer[9]~COUT ;
wire \Add0|adder|result_node|cs_buffer[10]~COUT ;
wire \Add0|adder|result_node|cs_buffer[11]~COUT ;
wire \Add0|adder|result_node|cs_buffer[12]~COUT ;
wire \Add0|adder|result_node|cs_buffer[13]~COUT ;
wire \Add0|adder|result_node|cs_buffer[14]~COUT ;
wire \Add0|adder|result_node|cs_buffer[15]~COUT ;
wire \Add0|adder|result_node|cs_buffer[16]~COUT ;
wire \Add0|adder|result_node|cs_buffer[17]~COUT ;
wire \Add0|adder|result_node|cs_buffer[18]~COUT ;
wire \Equal0~30 ;
wire \Equal0~20_combout ;
wire \Add0|adder|result_node|cs_buffer[19]~COUT ;
wire \Add0|adder|result_node|cs_buffer[20]~COUT ;
wire \Add0|adder|result_node|cs_buffer[21]~COUT ;
wire \Add0|adder|result_node|cs_buffer[22]~COUT ;
wire \Equal0~1_combout ;
wire \Add0|adder|result_node|cs_buffer[23]~COUT ;
wire \Add0|adder|result_node|cs_buffer[24]~COUT ;
wire \Add0|adder|result_node|cs_buffer[25]~COUT ;
wire \Add0|adder|result_node|cs_buffer[26]~COUT ;
wire \Equal0~0_combout ;
wire \Equal0~4_combout ;
wire \tick~regout ;
wire \temp[1]~reg0_regout ;
wire \temp[2]~reg0_regout ;
wire \temp[3]~reg0_regout ;
wire \temp[4]~reg0_regout ;
wire \temp[5]~reg0_regout ;
wire \temp[0]~reg0_regout ;
wire \out[0]~reg0_regout ;
wire \out[1]~reg0_regout ;
wire \out[2]~reg0_regout ;
wire \out[3]~reg0_regout ;
wire \out[4]~reg0_regout ;
wire \out[5]~reg0_regout ;
wire \temp[6]~reg0_regout ;
wire \out[6]~reg0_regout ;
wire \temp[7]~reg0_regout ;
wire \out[7]~reg0_regout ;
wire [27:0] counter;
wire [27:0] \Add0|adder|result_node|cs_buffer ;
wire [27:0] \Add0|adder|unreg_res_node ;


// atom is at LC8_B31
flex10ke_lcell \Equal0~21 (
// Equation(s):
// \Equal0~21_combout  = (\Add0|adder|result_node|cs_buffer [8] & \Add0|adder|result_node|cs_buffer [9] & \Add0|adder|result_node|cs_buffer [10] & \Add0|adder|result_node|cs_buffer [11]) & CASCADE(\Equal0~36 )

	.dataa(\Add0|adder|result_node|cs_buffer [8]),
	.datab(\Add0|adder|result_node|cs_buffer [9]),
	.datac(\Add0|adder|result_node|cs_buffer [10]),
	.datad(\Add0|adder|result_node|cs_buffer [11]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(\Equal0~36 ),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~21_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Equal0~21 .clock_enable_mode = "false";
defparam \Equal0~21 .lut_mask = "8000";
defparam \Equal0~21 .operation_mode = "normal";
defparam \Equal0~21 .output_mode = "comb_only";
defparam \Equal0~21 .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B31
flex10ke_lcell \Equal0~18 (
// Equation(s):
// \Equal0~34  = !\Add0|adder|result_node|cs_buffer [1] & !\Add0|adder|result_node|cs_buffer [2] & !\Add0|adder|result_node|cs_buffer [3] & counter[0]

	.dataa(\Add0|adder|result_node|cs_buffer [1]),
	.datab(\Add0|adder|result_node|cs_buffer [2]),
	.datac(\Add0|adder|result_node|cs_buffer [3]),
	.datad(counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~18_combout ),
	.regout(),
	.cout(),
	.cascout(\Equal0~34 ));
// synopsys translate_off
defparam \Equal0~18 .clock_enable_mode = "false";
defparam \Equal0~18 .lut_mask = "0100";
defparam \Equal0~18 .operation_mode = "normal";
defparam \Equal0~18 .output_mode = "none";
defparam \Equal0~18 .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_B31
flex10ke_lcell \Equal0~22 (
// Equation(s):
// \Equal0~36  = (!\Add0|adder|result_node|cs_buffer [4] & !\Add0|adder|result_node|cs_buffer [6] & \Add0|adder|result_node|cs_buffer [5] & \Add0|adder|result_node|cs_buffer [7]) & CASCADE(\Equal0~34 )

	.dataa(\Add0|adder|result_node|cs_buffer [4]),
	.datab(\Add0|adder|result_node|cs_buffer [6]),
	.datac(\Add0|adder|result_node|cs_buffer [5]),
	.datad(\Add0|adder|result_node|cs_buffer [7]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(\Equal0~34 ),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~22_combout ),
	.regout(),
	.cout(),
	.cascout(\Equal0~36 ));
// synopsys translate_off
defparam \Equal0~22 .clock_enable_mode = "false";
defparam \Equal0~22 .lut_mask = "1000";
defparam \Equal0~22 .operation_mode = "normal";
defparam \Equal0~22 .output_mode = "none";
defparam \Equal0~22 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B28
flex10ke_lcell \tick~5 (
// Equation(s):
// \tick~5_combout  = !\rst~dataout 

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\rst~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\tick~5_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \tick~5 .clock_enable_mode = "false";
defparam \tick~5 .lut_mask = "00ff";
defparam \tick~5 .operation_mode = "normal";
defparam \tick~5 .output_mode = "comb_only";
defparam \tick~5 .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_B27
flex10ke_lcell \counter[27]~63 (
// Equation(s):
// \counter[27]~63_combout  = !\tick~regout 

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\tick~regout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counter[27]~63_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[27]~63 .clock_enable_mode = "false";
defparam \counter[27]~63 .lut_mask = "00ff";
defparam \counter[27]~63 .operation_mode = "normal";
defparam \counter[27]~63 .output_mode = "comb_only";
defparam \counter[27]~63 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_126
flex10ke_io \rst~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\rst~dataout ),
	.padio(rst));
// synopsys translate_off
defparam \rst~I .feedback_mode = "from_pin";
defparam \rst~I .operation_mode = "input";
defparam \rst~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_55
flex10ke_io \clk~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\clk~dataout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .feedback_mode = "from_pin";
defparam \clk~I .operation_mode = "input";
defparam \clk~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC4_B33
flex10ke_lcell \counter[17] (
// Equation(s):
// counter[17] = DFFEA(\Add0|adder|result_node|cs_buffer [17], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [17]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[17]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[17] .clock_enable_mode = "true";
defparam \counter[17] .lut_mask = "ff00";
defparam \counter[17] .operation_mode = "normal";
defparam \counter[17] .output_mode = "reg_only";
defparam \counter[17] .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B30
flex10ke_lcell \counter[0] (
// Equation(s):
// counter[0] = DFFEA(!counter[0], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )
// \Add0|adder|result_node|cs_buffer[0]~COUT  = CARRY(counter[0])

	.dataa(\counter[27]~63_combout ),
	.datab(counter[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[0]),
	.cout(\Add0|adder|result_node|cs_buffer[0]~COUT ),
	.cascout());
// synopsys translate_off
defparam \counter[0] .clock_enable_mode = "true";
defparam \counter[0] .lut_mask = "33cc";
defparam \counter[0] .operation_mode = "arithmetic";
defparam \counter[0] .output_mode = "reg_only";
defparam \counter[0] .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_B30
flex10ke_lcell \Add0|adder|result_node|cs_buffer[1] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [1] = counter[1] $ \Add0|adder|result_node|cs_buffer[0]~COUT 
// \Add0|adder|result_node|cs_buffer[1]~COUT  = CARRY(counter[1] & \Add0|adder|result_node|cs_buffer[0]~COUT )

	.dataa(vcc),
	.datab(counter[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[0]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [1]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[1]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[1] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[1] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[1] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[1] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[1] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[1] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B31
flex10ke_lcell \counter[1] (
// Equation(s):
// counter[1] = DFFEA(\Add0|adder|result_node|cs_buffer [1], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [1]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[1]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[1] .clock_enable_mode = "true";
defparam \counter[1] .lut_mask = "ff00";
defparam \counter[1] .operation_mode = "normal";
defparam \counter[1] .output_mode = "reg_only";
defparam \counter[1] .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B30
flex10ke_lcell \Add0|adder|result_node|cs_buffer[2] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [2] = counter[2] $ \Add0|adder|result_node|cs_buffer[1]~COUT 
// \Add0|adder|result_node|cs_buffer[2]~COUT  = CARRY(counter[2] & \Add0|adder|result_node|cs_buffer[1]~COUT )

	.dataa(vcc),
	.datab(counter[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[1]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [2]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[2]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[2] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[2] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[2] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[2] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[2] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[2] .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B31
flex10ke_lcell \counter[2] (
// Equation(s):
// counter[2] = DFFEA(\Add0|adder|result_node|cs_buffer [2], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [2]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[2]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[2] .clock_enable_mode = "true";
defparam \counter[2] .lut_mask = "ff00";
defparam \counter[2] .operation_mode = "normal";
defparam \counter[2] .output_mode = "reg_only";
defparam \counter[2] .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B30
flex10ke_lcell \Add0|adder|result_node|cs_buffer[3] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [3] = counter[3] $ \Add0|adder|result_node|cs_buffer[2]~COUT 
// \Add0|adder|result_node|cs_buffer[3]~COUT  = CARRY(counter[3] & \Add0|adder|result_node|cs_buffer[2]~COUT )

	.dataa(vcc),
	.datab(counter[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[2]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [3]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[3]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[3] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[3] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[3] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[3] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[3] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[3] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B30
flex10ke_lcell \counter[3] (
// Equation(s):
// counter[3] = DFFEA(\Add0|adder|result_node|cs_buffer [3], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [3]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[3]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[3] .clock_enable_mode = "true";
defparam \counter[3] .lut_mask = "ff00";
defparam \counter[3] .operation_mode = "normal";
defparam \counter[3] .output_mode = "reg_only";
defparam \counter[3] .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_B30
flex10ke_lcell \Add0|adder|result_node|cs_buffer[4] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [4] = counter[4] $ \Add0|adder|result_node|cs_buffer[3]~COUT 
// \Add0|adder|result_node|cs_buffer[4]~COUT  = CARRY(counter[4] & \Add0|adder|result_node|cs_buffer[3]~COUT )

	.dataa(vcc),
	.datab(counter[4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[3]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [4]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[4]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[4] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[4] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[4] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[4] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[4] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[4] .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B30
flex10ke_lcell \counter[4] (
// Equation(s):
// counter[4] = DFFEA(\Add0|adder|result_node|cs_buffer [4], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [4]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[4]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[4] .clock_enable_mode = "true";
defparam \counter[4] .lut_mask = "ff00";
defparam \counter[4] .operation_mode = "normal";
defparam \counter[4] .output_mode = "reg_only";
defparam \counter[4] .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_B30
flex10ke_lcell \Add0|adder|result_node|cs_buffer[5] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [5] = counter[5] $ \Add0|adder|result_node|cs_buffer[4]~COUT 
// \Add0|adder|result_node|cs_buffer[5]~COUT  = CARRY(counter[5] & \Add0|adder|result_node|cs_buffer[4]~COUT )

	.dataa(vcc),
	.datab(counter[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[4]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [5]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[5]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[5] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[5] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[5] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[5] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[5] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[5] .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_B35
flex10ke_lcell \counter[5] (
// Equation(s):
// counter[5] = DFFEA(!\Equal0~4_combout  & \Add0|adder|result_node|cs_buffer [5], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(\Equal0~4_combout ),
	.datad(\Add0|adder|result_node|cs_buffer [5]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[5]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[5] .clock_enable_mode = "true";
defparam \counter[5] .lut_mask = "0f00";
defparam \counter[5] .operation_mode = "normal";
defparam \counter[5] .output_mode = "reg_only";
defparam \counter[5] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B32
flex10ke_lcell \Add0|adder|result_node|cs_buffer[6] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [6] = counter[6] $ \Add0|adder|result_node|cs_buffer[5]~COUT 
// \Add0|adder|result_node|cs_buffer[6]~COUT  = CARRY(counter[6] & \Add0|adder|result_node|cs_buffer[5]~COUT )

	.dataa(vcc),
	.datab(counter[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[5]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [6]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[6]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[6] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[6] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[6] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[6] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[6] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[6] .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B31
flex10ke_lcell \counter[6] (
// Equation(s):
// counter[6] = DFFEA(\Add0|adder|result_node|cs_buffer [6], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [6]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[6]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[6] .clock_enable_mode = "true";
defparam \counter[6] .lut_mask = "ff00";
defparam \counter[6] .operation_mode = "normal";
defparam \counter[6] .output_mode = "reg_only";
defparam \counter[6] .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B32
flex10ke_lcell \Add0|adder|result_node|cs_buffer[7] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [7] = counter[7] $ \Add0|adder|result_node|cs_buffer[6]~COUT 
// \Add0|adder|result_node|cs_buffer[7]~COUT  = CARRY(counter[7] & \Add0|adder|result_node|cs_buffer[6]~COUT )

	.dataa(vcc),
	.datab(counter[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[6]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [7]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[7]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[7] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[7] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[7] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[7] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[7] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[7] .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B35
flex10ke_lcell \counter[7] (
// Equation(s):
// counter[7] = DFFEA(!\Equal0~4_combout  & \Add0|adder|result_node|cs_buffer [7], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(\Equal0~4_combout ),
	.datad(\Add0|adder|result_node|cs_buffer [7]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[7]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[7] .clock_enable_mode = "true";
defparam \counter[7] .lut_mask = "0f00";
defparam \counter[7] .operation_mode = "normal";
defparam \counter[7] .output_mode = "reg_only";
defparam \counter[7] .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B32
flex10ke_lcell \Add0|adder|result_node|cs_buffer[8] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [8] = counter[8] $ \Add0|adder|result_node|cs_buffer[7]~COUT 
// \Add0|adder|result_node|cs_buffer[8]~COUT  = CARRY(counter[8] & \Add0|adder|result_node|cs_buffer[7]~COUT )

	.dataa(vcc),
	.datab(counter[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[7]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [8]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[8]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[8] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[8] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[8] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[8] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[8] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[8] .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B35
flex10ke_lcell \counter[8] (
// Equation(s):
// counter[8] = DFFEA(!\Equal0~4_combout  & \Add0|adder|result_node|cs_buffer [8], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(\Equal0~4_combout ),
	.datad(\Add0|adder|result_node|cs_buffer [8]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[8]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[8] .clock_enable_mode = "true";
defparam \counter[8] .lut_mask = "0f00";
defparam \counter[8] .operation_mode = "normal";
defparam \counter[8] .output_mode = "reg_only";
defparam \counter[8] .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_B32
flex10ke_lcell \Add0|adder|result_node|cs_buffer[9] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [9] = counter[9] $ \Add0|adder|result_node|cs_buffer[8]~COUT 
// \Add0|adder|result_node|cs_buffer[9]~COUT  = CARRY(counter[9] & \Add0|adder|result_node|cs_buffer[8]~COUT )

	.dataa(vcc),
	.datab(counter[9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[8]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [9]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[9]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[9] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[9] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[9] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[9] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[9] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[9] .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B35
flex10ke_lcell \counter[9] (
// Equation(s):
// counter[9] = DFFEA(!\Equal0~4_combout  & \Add0|adder|result_node|cs_buffer [9], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(\Equal0~4_combout ),
	.datad(\Add0|adder|result_node|cs_buffer [9]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[9]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[9] .clock_enable_mode = "true";
defparam \counter[9] .lut_mask = "0f00";
defparam \counter[9] .operation_mode = "normal";
defparam \counter[9] .output_mode = "reg_only";
defparam \counter[9] .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B32
flex10ke_lcell \Add0|adder|result_node|cs_buffer[10] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [10] = counter[10] $ \Add0|adder|result_node|cs_buffer[9]~COUT 
// \Add0|adder|result_node|cs_buffer[10]~COUT  = CARRY(counter[10] & \Add0|adder|result_node|cs_buffer[9]~COUT )

	.dataa(vcc),
	.datab(counter[10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[9]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [10]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[10]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[10] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[10] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[10] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[10] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[10] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[10] .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_B35
flex10ke_lcell \counter[10] (
// Equation(s):
// counter[10] = DFFEA(!\Equal0~4_combout  & \Add0|adder|result_node|cs_buffer [10], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(\Equal0~4_combout ),
	.datad(\Add0|adder|result_node|cs_buffer [10]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[10]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[10] .clock_enable_mode = "true";
defparam \counter[10] .lut_mask = "0f00";
defparam \counter[10] .operation_mode = "normal";
defparam \counter[10] .output_mode = "reg_only";
defparam \counter[10] .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B32
flex10ke_lcell \Add0|adder|result_node|cs_buffer[11] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [11] = counter[11] $ \Add0|adder|result_node|cs_buffer[10]~COUT 
// \Add0|adder|result_node|cs_buffer[11]~COUT  = CARRY(counter[11] & \Add0|adder|result_node|cs_buffer[10]~COUT )

	.dataa(vcc),
	.datab(counter[11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[10]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [11]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[11]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[11] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[11] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[11] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[11] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[11] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[11] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B33
flex10ke_lcell \counter[11] (
// Equation(s):
// counter[11] = DFFEA(!\Equal0~4_combout  & \Add0|adder|result_node|cs_buffer [11], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(\Equal0~4_combout ),
	.datad(\Add0|adder|result_node|cs_buffer [11]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[11]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[11] .clock_enable_mode = "true";
defparam \counter[11] .lut_mask = "0f00";
defparam \counter[11] .operation_mode = "normal";
defparam \counter[11] .output_mode = "reg_only";
defparam \counter[11] .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_B32
flex10ke_lcell \Add0|adder|result_node|cs_buffer[12] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [12] = counter[12] $ \Add0|adder|result_node|cs_buffer[11]~COUT 
// \Add0|adder|result_node|cs_buffer[12]~COUT  = CARRY(counter[12] & \Add0|adder|result_node|cs_buffer[11]~COUT )

	.dataa(vcc),
	.datab(counter[12]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[11]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [12]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[12]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[12] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[12] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[12] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[12] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[12] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[12] .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_B31
flex10ke_lcell \counter[12] (
// Equation(s):
// counter[12] = DFFEA(\Add0|adder|result_node|cs_buffer [12], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [12]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[12]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[12] .clock_enable_mode = "true";
defparam \counter[12] .lut_mask = "ff00";
defparam \counter[12] .operation_mode = "normal";
defparam \counter[12] .output_mode = "reg_only";
defparam \counter[12] .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_B32
flex10ke_lcell \Add0|adder|result_node|cs_buffer[13] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [13] = counter[13] $ \Add0|adder|result_node|cs_buffer[12]~COUT 
// \Add0|adder|result_node|cs_buffer[13]~COUT  = CARRY(counter[13] & \Add0|adder|result_node|cs_buffer[12]~COUT )

	.dataa(vcc),
	.datab(counter[13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[12]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [13]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[13]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[13] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[13] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[13] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[13] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[13] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[13] .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B33
flex10ke_lcell \counter[13] (
// Equation(s):
// counter[13] = DFFEA(\Add0|adder|result_node|cs_buffer [13], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [13]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[13]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[13] .clock_enable_mode = "true";
defparam \counter[13] .lut_mask = "ff00";
defparam \counter[13] .operation_mode = "normal";
defparam \counter[13] .output_mode = "reg_only";
defparam \counter[13] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B34
flex10ke_lcell \Add0|adder|result_node|cs_buffer[14] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [14] = counter[14] $ \Add0|adder|result_node|cs_buffer[13]~COUT 
// \Add0|adder|result_node|cs_buffer[14]~COUT  = CARRY(counter[14] & \Add0|adder|result_node|cs_buffer[13]~COUT )

	.dataa(vcc),
	.datab(counter[14]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[13]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [14]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[14]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[14] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[14] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[14] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[14] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[14] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[14] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B19
flex10ke_lcell \counter[14] (
// Equation(s):
// counter[14] = DFFEA(\Add0|adder|result_node|cs_buffer [14], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [14]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[14]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[14] .clock_enable_mode = "true";
defparam \counter[14] .lut_mask = "ff00";
defparam \counter[14] .operation_mode = "normal";
defparam \counter[14] .output_mode = "reg_only";
defparam \counter[14] .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B34
flex10ke_lcell \Add0|adder|result_node|cs_buffer[15] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [15] = counter[15] $ \Add0|adder|result_node|cs_buffer[14]~COUT 
// \Add0|adder|result_node|cs_buffer[15]~COUT  = CARRY(counter[15] & \Add0|adder|result_node|cs_buffer[14]~COUT )

	.dataa(vcc),
	.datab(counter[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[14]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [15]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[15]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[15] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[15] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[15] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[15] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[15] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[15] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B27
flex10ke_lcell \counter[15] (
// Equation(s):
// counter[15] = DFFEA(\Add0|adder|result_node|cs_buffer [15], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [15]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[15]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[15] .clock_enable_mode = "true";
defparam \counter[15] .lut_mask = "ff00";
defparam \counter[15] .operation_mode = "normal";
defparam \counter[15] .output_mode = "reg_only";
defparam \counter[15] .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B34
flex10ke_lcell \Add0|adder|result_node|cs_buffer[16] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [16] = counter[16] $ \Add0|adder|result_node|cs_buffer[15]~COUT 
// \Add0|adder|result_node|cs_buffer[16]~COUT  = CARRY(counter[16] & \Add0|adder|result_node|cs_buffer[15]~COUT )

	.dataa(vcc),
	.datab(counter[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[15]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [16]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[16]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[16] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[16] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[16] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[16] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[16] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[16] .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B33
flex10ke_lcell \counter[16] (
// Equation(s):
// counter[16] = DFFEA(\Add0|adder|result_node|cs_buffer [16], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [16]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[16]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[16] .clock_enable_mode = "true";
defparam \counter[16] .lut_mask = "ff00";
defparam \counter[16] .operation_mode = "normal";
defparam \counter[16] .output_mode = "reg_only";
defparam \counter[16] .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_B34
flex10ke_lcell \Add0|adder|result_node|cs_buffer[17] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [17] = counter[17] $ \Add0|adder|result_node|cs_buffer[16]~COUT 
// \Add0|adder|result_node|cs_buffer[17]~COUT  = CARRY(counter[17] & \Add0|adder|result_node|cs_buffer[16]~COUT )

	.dataa(vcc),
	.datab(counter[17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[16]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [17]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[17]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[17] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[17] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[17] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[17] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[17] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[17] .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_B33
flex10ke_lcell \counter[18] (
// Equation(s):
// counter[18] = DFFEA(\Add0|adder|result_node|cs_buffer [18], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [18]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[18]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[18] .clock_enable_mode = "true";
defparam \counter[18] .lut_mask = "ff00";
defparam \counter[18] .operation_mode = "normal";
defparam \counter[18] .output_mode = "reg_only";
defparam \counter[18] .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B34
flex10ke_lcell \Add0|adder|result_node|cs_buffer[18] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [18] = counter[18] $ \Add0|adder|result_node|cs_buffer[17]~COUT 
// \Add0|adder|result_node|cs_buffer[18]~COUT  = CARRY(counter[18] & \Add0|adder|result_node|cs_buffer[17]~COUT )

	.dataa(vcc),
	.datab(counter[18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[17]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [18]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[18]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[18] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[18] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[18] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[18] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[18] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[18] .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_B33
flex10ke_lcell \counter[19] (
// Equation(s):
// counter[19] = DFFEA(\Add0|adder|result_node|cs_buffer [19], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [19]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[19]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[19] .clock_enable_mode = "true";
defparam \counter[19] .lut_mask = "ff00";
defparam \counter[19] .operation_mode = "normal";
defparam \counter[19] .output_mode = "reg_only";
defparam \counter[19] .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B34
flex10ke_lcell \Add0|adder|result_node|cs_buffer[19] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [19] = counter[19] $ \Add0|adder|result_node|cs_buffer[18]~COUT 
// \Add0|adder|result_node|cs_buffer[19]~COUT  = CARRY(counter[19] & \Add0|adder|result_node|cs_buffer[18]~COUT )

	.dataa(vcc),
	.datab(counter[19]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[18]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [19]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[19]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[19] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[19] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[19] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[19] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[19] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[19] .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B33
flex10ke_lcell \Equal0~11 (
// Equation(s):
// \Equal0~30  = !\Add0|adder|result_node|cs_buffer [12] & !\Add0|adder|result_node|cs_buffer [13] & !\Add0|adder|result_node|cs_buffer [14] & !\Add0|adder|result_node|cs_buffer [15]

	.dataa(\Add0|adder|result_node|cs_buffer [12]),
	.datab(\Add0|adder|result_node|cs_buffer [13]),
	.datac(\Add0|adder|result_node|cs_buffer [14]),
	.datad(\Add0|adder|result_node|cs_buffer [15]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~11_combout ),
	.regout(),
	.cout(),
	.cascout(\Equal0~30 ));
// synopsys translate_off
defparam \Equal0~11 .clock_enable_mode = "false";
defparam \Equal0~11 .lut_mask = "0001";
defparam \Equal0~11 .operation_mode = "normal";
defparam \Equal0~11 .output_mode = "none";
defparam \Equal0~11 .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B33
flex10ke_lcell \Equal0~20 (
// Equation(s):
// \Equal0~20_combout  = (!\Add0|adder|result_node|cs_buffer [16] & !\Add0|adder|result_node|cs_buffer [17] & !\Add0|adder|result_node|cs_buffer [18] & !\Add0|adder|result_node|cs_buffer [19]) & CASCADE(\Equal0~30 )

	.dataa(\Add0|adder|result_node|cs_buffer [16]),
	.datab(\Add0|adder|result_node|cs_buffer [17]),
	.datac(\Add0|adder|result_node|cs_buffer [18]),
	.datad(\Add0|adder|result_node|cs_buffer [19]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(\Equal0~30 ),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~20_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Equal0~20 .clock_enable_mode = "false";
defparam \Equal0~20 .lut_mask = "0001";
defparam \Equal0~20 .operation_mode = "normal";
defparam \Equal0~20 .output_mode = "comb_only";
defparam \Equal0~20 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B27
flex10ke_lcell \counter[21] (
// Equation(s):
// counter[21] = DFFEA(\Add0|adder|result_node|cs_buffer [21], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [21]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[21]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[21] .clock_enable_mode = "true";
defparam \counter[21] .lut_mask = "ff00";
defparam \counter[21] .operation_mode = "normal";
defparam \counter[21] .output_mode = "reg_only";
defparam \counter[21] .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_B34
flex10ke_lcell \Add0|adder|result_node|cs_buffer[20] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [20] = counter[20] $ \Add0|adder|result_node|cs_buffer[19]~COUT 
// \Add0|adder|result_node|cs_buffer[20]~COUT  = CARRY(counter[20] & \Add0|adder|result_node|cs_buffer[19]~COUT )

	.dataa(vcc),
	.datab(counter[20]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[19]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [20]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[20]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[20] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[20] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[20] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[20] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[20] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[20] .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B27
flex10ke_lcell \counter[20] (
// Equation(s):
// counter[20] = DFFEA(\Add0|adder|result_node|cs_buffer [20], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [20]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[20]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[20] .clock_enable_mode = "true";
defparam \counter[20] .lut_mask = "ff00";
defparam \counter[20] .operation_mode = "normal";
defparam \counter[20] .output_mode = "reg_only";
defparam \counter[20] .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_B34
flex10ke_lcell \Add0|adder|result_node|cs_buffer[21] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [21] = counter[21] $ \Add0|adder|result_node|cs_buffer[20]~COUT 
// \Add0|adder|result_node|cs_buffer[21]~COUT  = CARRY(counter[21] & \Add0|adder|result_node|cs_buffer[20]~COUT )

	.dataa(vcc),
	.datab(counter[21]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[20]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [21]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[21]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[21] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[21] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[21] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[21] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[21] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[21] .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_B27
flex10ke_lcell \counter[22] (
// Equation(s):
// counter[22] = DFFEA(\Add0|adder|result_node|cs_buffer [22], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [22]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[22]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[22] .clock_enable_mode = "true";
defparam \counter[22] .lut_mask = "ff00";
defparam \counter[22] .operation_mode = "normal";
defparam \counter[22] .output_mode = "reg_only";
defparam \counter[22] .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B36
flex10ke_lcell \Add0|adder|result_node|cs_buffer[22] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [22] = counter[22] $ \Add0|adder|result_node|cs_buffer[21]~COUT 
// \Add0|adder|result_node|cs_buffer[22]~COUT  = CARRY(counter[22] & \Add0|adder|result_node|cs_buffer[21]~COUT )

	.dataa(vcc),
	.datab(counter[22]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[21]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [22]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[22]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[22] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[22] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[22] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[22] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[22] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[22] .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B27
flex10ke_lcell \counter[23] (
// Equation(s):
// counter[23] = DFFEA(\Add0|adder|result_node|cs_buffer [23], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [23]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[23]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[23] .clock_enable_mode = "true";
defparam \counter[23] .lut_mask = "ff00";
defparam \counter[23] .operation_mode = "normal";
defparam \counter[23] .output_mode = "reg_only";
defparam \counter[23] .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B36
flex10ke_lcell \Add0|adder|result_node|cs_buffer[23] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [23] = counter[23] $ \Add0|adder|result_node|cs_buffer[22]~COUT 
// \Add0|adder|result_node|cs_buffer[23]~COUT  = CARRY(counter[23] & \Add0|adder|result_node|cs_buffer[22]~COUT )

	.dataa(vcc),
	.datab(counter[23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[22]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [23]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[23]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[23] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[23] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[23] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[23] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[23] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[23] .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_B35
flex10ke_lcell \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = !\Add0|adder|result_node|cs_buffer [20] & !\Add0|adder|result_node|cs_buffer [21] & !\Add0|adder|result_node|cs_buffer [22] & !\Add0|adder|result_node|cs_buffer [23]

	.dataa(\Add0|adder|result_node|cs_buffer [20]),
	.datab(\Add0|adder|result_node|cs_buffer [21]),
	.datac(\Add0|adder|result_node|cs_buffer [22]),
	.datad(\Add0|adder|result_node|cs_buffer [23]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~1_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Equal0~1 .clock_enable_mode = "false";
defparam \Equal0~1 .lut_mask = "0001";
defparam \Equal0~1 .operation_mode = "normal";
defparam \Equal0~1 .output_mode = "comb_only";
defparam \Equal0~1 .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_B36
flex10ke_lcell \counter[25] (
// Equation(s):
// counter[25] = DFFEA(\Add0|adder|result_node|cs_buffer [25], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [25]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[25]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[25] .clock_enable_mode = "true";
defparam \counter[25] .lut_mask = "ff00";
defparam \counter[25] .operation_mode = "normal";
defparam \counter[25] .output_mode = "reg_only";
defparam \counter[25] .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B36
flex10ke_lcell \Add0|adder|result_node|cs_buffer[24] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [24] = counter[24] $ \Add0|adder|result_node|cs_buffer[23]~COUT 
// \Add0|adder|result_node|cs_buffer[24]~COUT  = CARRY(counter[24] & \Add0|adder|result_node|cs_buffer[23]~COUT )

	.dataa(vcc),
	.datab(counter[24]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[23]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [24]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[24]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[24] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[24] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[24] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[24] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[24] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[24] .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B27
flex10ke_lcell \counter[24] (
// Equation(s):
// counter[24] = DFFEA(\Add0|adder|result_node|cs_buffer [24], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [24]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[24]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[24] .clock_enable_mode = "true";
defparam \counter[24] .lut_mask = "ff00";
defparam \counter[24] .operation_mode = "normal";
defparam \counter[24] .output_mode = "reg_only";
defparam \counter[24] .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_B36
flex10ke_lcell \Add0|adder|result_node|cs_buffer[25] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [25] = counter[25] $ \Add0|adder|result_node|cs_buffer[24]~COUT 
// \Add0|adder|result_node|cs_buffer[25]~COUT  = CARRY(counter[25] & \Add0|adder|result_node|cs_buffer[24]~COUT )

	.dataa(vcc),
	.datab(counter[25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[24]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [25]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[25]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[25] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[25] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[25] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[25] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[25] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[25] .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_B27
flex10ke_lcell \counter[26] (
// Equation(s):
// counter[26] = DFFEA(\Add0|adder|result_node|cs_buffer [26], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|result_node|cs_buffer [26]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[26]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[26] .clock_enable_mode = "true";
defparam \counter[26] .lut_mask = "ff00";
defparam \counter[26] .operation_mode = "normal";
defparam \counter[26] .output_mode = "reg_only";
defparam \counter[26] .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B36
flex10ke_lcell \Add0|adder|result_node|cs_buffer[26] (
// Equation(s):
// \Add0|adder|result_node|cs_buffer [26] = counter[26] $ \Add0|adder|result_node|cs_buffer[25]~COUT 
// \Add0|adder|result_node|cs_buffer[26]~COUT  = CARRY(counter[26] & \Add0|adder|result_node|cs_buffer[25]~COUT )

	.dataa(vcc),
	.datab(counter[26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[25]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|result_node|cs_buffer [26]),
	.regout(),
	.cout(\Add0|adder|result_node|cs_buffer[26]~COUT ),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|result_node|cs_buffer[26] .cin_used = "true";
defparam \Add0|adder|result_node|cs_buffer[26] .clock_enable_mode = "false";
defparam \Add0|adder|result_node|cs_buffer[26] .lut_mask = "3cc0";
defparam \Add0|adder|result_node|cs_buffer[26] .operation_mode = "arithmetic";
defparam \Add0|adder|result_node|cs_buffer[26] .output_mode = "comb_only";
defparam \Add0|adder|result_node|cs_buffer[26] .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B31
flex10ke_lcell \counter[27] (
// Equation(s):
// counter[27] = DFFEA(\Add0|adder|unreg_res_node [27], GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \counter[27]~63_combout , , )

	.dataa(\counter[27]~63_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0|adder|unreg_res_node [27]),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[27]),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \counter[27] .clock_enable_mode = "true";
defparam \counter[27] .lut_mask = "ff00";
defparam \counter[27] .operation_mode = "normal";
defparam \counter[27] .output_mode = "reg_only";
defparam \counter[27] .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B36
flex10ke_lcell \Add0|adder|unreg_res_node[27] (
// Equation(s):
// \Add0|adder|unreg_res_node [27] = \Add0|adder|result_node|cs_buffer[26]~COUT  $ counter[27]

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(counter[27]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(\Add0|adder|result_node|cs_buffer[26]~COUT ),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0|adder|unreg_res_node [27]),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Add0|adder|unreg_res_node[27] .cin_used = "true";
defparam \Add0|adder|unreg_res_node[27] .clock_enable_mode = "false";
defparam \Add0|adder|unreg_res_node[27] .lut_mask = "0ff0";
defparam \Add0|adder|unreg_res_node[27] .operation_mode = "normal";
defparam \Add0|adder|unreg_res_node[27] .output_mode = "comb_only";
defparam \Add0|adder|unreg_res_node[27] .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_B36
flex10ke_lcell \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = !\Add0|adder|result_node|cs_buffer [24] & !\Add0|adder|result_node|cs_buffer [25] & !\Add0|adder|result_node|cs_buffer [26] & !\Add0|adder|unreg_res_node [27]

	.dataa(\Add0|adder|result_node|cs_buffer [24]),
	.datab(\Add0|adder|result_node|cs_buffer [25]),
	.datac(\Add0|adder|result_node|cs_buffer [26]),
	.datad(\Add0|adder|unreg_res_node [27]),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~0_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Equal0~0 .clock_enable_mode = "false";
defparam \Equal0~0 .lut_mask = "0001";
defparam \Equal0~0 .operation_mode = "normal";
defparam \Equal0~0 .output_mode = "comb_only";
defparam \Equal0~0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B35
flex10ke_lcell \Equal0~4 (
// Equation(s):
// \Equal0~4_combout  = \Equal0~21_combout  & \Equal0~20_combout  & \Equal0~1_combout  & \Equal0~0_combout 

	.dataa(\Equal0~21_combout ),
	.datab(\Equal0~20_combout ),
	.datac(\Equal0~1_combout ),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~4_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Equal0~4 .clock_enable_mode = "false";
defparam \Equal0~4 .lut_mask = "8000";
defparam \Equal0~4 .operation_mode = "normal";
defparam \Equal0~4 .output_mode = "comb_only";
defparam \Equal0~4 .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B35
flex10ke_lcell tick(
// Equation(s):
// \tick~regout  = DFFEA(!\tick~regout  & \Equal0~4_combout , GLOBAL(\clk~dataout ), , , \tick~5_combout , , )

	.dataa(\tick~5_combout ),
	.datab(vcc),
	.datac(\tick~regout ),
	.datad(\Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\tick~regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam tick.clock_enable_mode = "true";
defparam tick.lut_mask = "0f00";
defparam tick.operation_mode = "normal";
defparam tick.output_mode = "reg_only";
defparam tick.packed_mode = "false";
// synopsys translate_on

// atom is at LC7_C30
flex10ke_lcell \temp[1]~reg0 (
// Equation(s):
// \temp[1]~reg0_regout  = DFFEA(!\temp[0]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[0]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\temp[1]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \temp[1]~reg0 .clock_enable_mode = "false";
defparam \temp[1]~reg0 .lut_mask = "00ff";
defparam \temp[1]~reg0 .operation_mode = "normal";
defparam \temp[1]~reg0 .output_mode = "reg_only";
defparam \temp[1]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_C6
flex10ke_lcell \temp[2]~reg0 (
// Equation(s):
// \temp[2]~reg0_regout  = DFFEA(\temp[1]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[1]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\temp[2]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \temp[2]~reg0 .clock_enable_mode = "false";
defparam \temp[2]~reg0 .lut_mask = "ff00";
defparam \temp[2]~reg0 .operation_mode = "normal";
defparam \temp[2]~reg0 .output_mode = "reg_only";
defparam \temp[2]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_C30
flex10ke_lcell \temp[3]~reg0 (
// Equation(s):
// \temp[3]~reg0_regout  = DFFEA(\temp[2]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[2]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\temp[3]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \temp[3]~reg0 .clock_enable_mode = "false";
defparam \temp[3]~reg0 .lut_mask = "ff00";
defparam \temp[3]~reg0 .operation_mode = "normal";
defparam \temp[3]~reg0 .output_mode = "reg_only";
defparam \temp[3]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_C30
flex10ke_lcell \temp[4]~reg0 (
// Equation(s):
// \temp[4]~reg0_regout  = DFFEA(\temp[3]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[3]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\temp[4]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \temp[4]~reg0 .clock_enable_mode = "false";
defparam \temp[4]~reg0 .lut_mask = "ff00";
defparam \temp[4]~reg0 .operation_mode = "normal";
defparam \temp[4]~reg0 .output_mode = "reg_only";
defparam \temp[4]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_C25
flex10ke_lcell \temp[5]~reg0 (
// Equation(s):
// \temp[5]~reg0_regout  = DFFEA(\temp[4]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[4]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\temp[5]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \temp[5]~reg0 .clock_enable_mode = "false";
defparam \temp[5]~reg0 .lut_mask = "ff00";
defparam \temp[5]~reg0 .operation_mode = "normal";
defparam \temp[5]~reg0 .output_mode = "reg_only";
defparam \temp[5]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_C25
flex10ke_lcell \temp[0]~reg0 (
// Equation(s):
// \temp[0]~reg0_regout  = DFFEA(\temp[7]~reg0_regout  $ \temp[5]~reg0_regout  $ \temp[4]~reg0_regout  $ !\temp[3]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , , , )

	.dataa(\temp[7]~reg0_regout ),
	.datab(\temp[5]~reg0_regout ),
	.datac(\temp[4]~reg0_regout ),
	.datad(\temp[3]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\temp[0]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \temp[0]~reg0 .clock_enable_mode = "false";
defparam \temp[0]~reg0 .lut_mask = "9669";
defparam \temp[0]~reg0 .operation_mode = "normal";
defparam \temp[0]~reg0 .output_mode = "reg_only";
defparam \temp[0]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_C30
flex10ke_lcell \out[0]~reg0 (
// Equation(s):
// \out[0]~reg0_regout  = DFFEA(\temp[0]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \tick~regout , , )

	.dataa(\tick~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[0]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[0]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out[0]~reg0 .clock_enable_mode = "true";
defparam \out[0]~reg0 .lut_mask = "ff00";
defparam \out[0]~reg0 .operation_mode = "normal";
defparam \out[0]~reg0 .output_mode = "reg_only";
defparam \out[0]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_C30
flex10ke_lcell \out[1]~reg0 (
// Equation(s):
// \out[1]~reg0_regout  = DFFEA(\temp[1]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \tick~regout , , )

	.dataa(\tick~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[1]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[1]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out[1]~reg0 .clock_enable_mode = "true";
defparam \out[1]~reg0 .lut_mask = "ff00";
defparam \out[1]~reg0 .operation_mode = "normal";
defparam \out[1]~reg0 .output_mode = "reg_only";
defparam \out[1]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_C34
flex10ke_lcell \out[2]~reg0 (
// Equation(s):
// \out[2]~reg0_regout  = DFFEA(\temp[2]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \tick~regout , , )

	.dataa(\tick~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[2]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[2]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out[2]~reg0 .clock_enable_mode = "true";
defparam \out[2]~reg0 .lut_mask = "ff00";
defparam \out[2]~reg0 .operation_mode = "normal";
defparam \out[2]~reg0 .output_mode = "reg_only";
defparam \out[2]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_C30
flex10ke_lcell \out[3]~reg0 (
// Equation(s):
// \out[3]~reg0_regout  = DFFEA(\temp[3]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \tick~regout , , )

	.dataa(\tick~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[3]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[3]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out[3]~reg0 .clock_enable_mode = "true";
defparam \out[3]~reg0 .lut_mask = "ff00";
defparam \out[3]~reg0 .operation_mode = "normal";
defparam \out[3]~reg0 .output_mode = "reg_only";
defparam \out[3]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_C25
flex10ke_lcell \out[4]~reg0 (
// Equation(s):
// \out[4]~reg0_regout  = DFFEA(\temp[4]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \tick~regout , , )

	.dataa(\tick~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[4]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[4]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out[4]~reg0 .clock_enable_mode = "true";
defparam \out[4]~reg0 .lut_mask = "ff00";
defparam \out[4]~reg0 .operation_mode = "normal";
defparam \out[4]~reg0 .output_mode = "reg_only";
defparam \out[4]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_C25
flex10ke_lcell \out[5]~reg0 (
// Equation(s):
// \out[5]~reg0_regout  = DFFEA(\temp[5]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \tick~regout , , )

	.dataa(\tick~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[5]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[5]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out[5]~reg0 .clock_enable_mode = "true";
defparam \out[5]~reg0 .lut_mask = "ff00";
defparam \out[5]~reg0 .operation_mode = "normal";
defparam \out[5]~reg0 .output_mode = "reg_only";
defparam \out[5]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_C25
flex10ke_lcell \temp[6]~reg0 (
// Equation(s):
// \temp[6]~reg0_regout  = DFFEA(\temp[5]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[5]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\temp[6]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \temp[6]~reg0 .clock_enable_mode = "false";
defparam \temp[6]~reg0 .lut_mask = "ff00";
defparam \temp[6]~reg0 .operation_mode = "normal";
defparam \temp[6]~reg0 .output_mode = "reg_only";
defparam \temp[6]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_C25
flex10ke_lcell \out[6]~reg0 (
// Equation(s):
// \out[6]~reg0_regout  = DFFEA(\temp[6]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \tick~regout , , )

	.dataa(\tick~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[6]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[6]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out[6]~reg0 .clock_enable_mode = "true";
defparam \out[6]~reg0 .lut_mask = "ff00";
defparam \out[6]~reg0 .operation_mode = "normal";
defparam \out[6]~reg0 .output_mode = "reg_only";
defparam \out[6]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_C25
flex10ke_lcell \temp[7]~reg0 (
// Equation(s):
// \temp[7]~reg0_regout  = DFFEA(\temp[6]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[6]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\temp[7]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \temp[7]~reg0 .clock_enable_mode = "false";
defparam \temp[7]~reg0 .lut_mask = "ff00";
defparam \temp[7]~reg0 .operation_mode = "normal";
defparam \temp[7]~reg0 .output_mode = "reg_only";
defparam \temp[7]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_C25
flex10ke_lcell \out[7]~reg0 (
// Equation(s):
// \out[7]~reg0_regout  = DFFEA(\temp[7]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\rst~dataout ), , \tick~regout , , )

	.dataa(\tick~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\temp[7]~reg0_regout ),
	.aclr(\rst~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\out[7]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \out[7]~reg0 .clock_enable_mode = "true";
defparam \out[7]~reg0 .lut_mask = "ff00";
defparam \out[7]~reg0 .operation_mode = "normal";
defparam \out[7]~reg0 .output_mode = "reg_only";
defparam \out[7]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_13
flex10ke_io \out[0]~I (
	.datain(!\out[0]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[0]));
// synopsys translate_off
defparam \out[0]~I .feedback_mode = "none";
defparam \out[0]~I .operation_mode = "output";
defparam \out[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_43
flex10ke_io \out[1]~I (
	.datain(\out[1]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[1]));
// synopsys translate_off
defparam \out[1]~I .feedback_mode = "none";
defparam \out[1]~I .operation_mode = "output";
defparam \out[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_11
flex10ke_io \out[2]~I (
	.datain(\out[2]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[2]));
// synopsys translate_off
defparam \out[2]~I .feedback_mode = "none";
defparam \out[2]~I .operation_mode = "output";
defparam \out[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_28
flex10ke_io \out[3]~I (
	.datain(\out[3]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[3]));
// synopsys translate_off
defparam \out[3]~I .feedback_mode = "none";
defparam \out[3]~I .operation_mode = "output";
defparam \out[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_7
flex10ke_io \out[4]~I (
	.datain(\out[4]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[4]));
// synopsys translate_off
defparam \out[4]~I .feedback_mode = "none";
defparam \out[4]~I .operation_mode = "output";
defparam \out[4]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_14
flex10ke_io \out[5]~I (
	.datain(\out[5]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[5]));
// synopsys translate_off
defparam \out[5]~I .feedback_mode = "none";
defparam \out[5]~I .operation_mode = "output";
defparam \out[5]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_47
flex10ke_io \out[6]~I (
	.datain(\out[6]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[6]));
// synopsys translate_off
defparam \out[6]~I .feedback_mode = "none";
defparam \out[6]~I .operation_mode = "output";
defparam \out[6]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_81
flex10ke_io \out[7]~I (
	.datain(\out[7]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(out[7]));
// synopsys translate_off
defparam \out[7]~I .feedback_mode = "none";
defparam \out[7]~I .operation_mode = "output";
defparam \out[7]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_132
flex10ke_io \temp[0]~I (
	.datain(!\temp[0]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(temp[0]));
// synopsys translate_off
defparam \temp[0]~I .feedback_mode = "none";
defparam \temp[0]~I .operation_mode = "output";
defparam \temp[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_95
flex10ke_io \temp[1]~I (
	.datain(\temp[1]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(temp[1]));
// synopsys translate_off
defparam \temp[1]~I .feedback_mode = "none";
defparam \temp[1]~I .operation_mode = "output";
defparam \temp[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_96
flex10ke_io \temp[2]~I (
	.datain(\temp[2]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(temp[2]));
// synopsys translate_off
defparam \temp[2]~I .feedback_mode = "none";
defparam \temp[2]~I .operation_mode = "output";
defparam \temp[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_18
flex10ke_io \temp[3]~I (
	.datain(\temp[3]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(temp[3]));
// synopsys translate_off
defparam \temp[3]~I .feedback_mode = "none";
defparam \temp[3]~I .operation_mode = "output";
defparam \temp[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_17
flex10ke_io \temp[4]~I (
	.datain(\temp[4]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(temp[4]));
// synopsys translate_off
defparam \temp[4]~I .feedback_mode = "none";
defparam \temp[4]~I .operation_mode = "output";
defparam \temp[4]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_22
flex10ke_io \temp[5]~I (
	.datain(\temp[5]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(temp[5]));
// synopsys translate_off
defparam \temp[5]~I .feedback_mode = "none";
defparam \temp[5]~I .operation_mode = "output";
defparam \temp[5]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_33
flex10ke_io \temp[6]~I (
	.datain(\temp[6]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(temp[6]));
// synopsys translate_off
defparam \temp[6]~I .feedback_mode = "none";
defparam \temp[6]~I .operation_mode = "output";
defparam \temp[6]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_88
flex10ke_io \temp[7]~I (
	.datain(\temp[7]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(temp[7]));
// synopsys translate_off
defparam \temp[7]~I .feedback_mode = "none";
defparam \temp[7]~I .operation_mode = "output";
defparam \temp[7]~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
